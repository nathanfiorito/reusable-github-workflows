name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]
  workflow_call:
    inputs:
      pr_number:
        description: Pull request number to review when the workflow is reused.
        type: string
        default: ""
        required: false
      repo_name:
        description: Optional repository (owner/name) override for the PR.
        required: false
        type: string
      python_version:
        description: VersÃ£o do Python
        default: "3.12"
        type: string
    secrets:
      OPENAI_API_KEY:
        required: true

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-code-review:
    name: OpenAI Code Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout reusable repo (este repo)
        uses: actions/checkout@v4
        with:
          repository: nathanfiorito/reusable-github-workflows
          path: reusable
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install dependencies (optional)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Run AI Code Review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ inputs.pr_number }}
        run: |
          echo "Running script: ./scripts/python/ai-code-review.py"
          python ./scripts/python/ai-code-review.py

      - name: Comment summary on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const fs = require('fs');
            const summaryPath = 'review-summary.md';

            if (fs.existsSync(summaryPath)) {
              const summary = fs.readFileSync(summaryPath, 'utf8').trim();
              if (summary.length > 0) {
                const [owner, repo] = '${{ steps.review-context.outputs.repo-name }}'.split('/');
                const issueNumber = Number('${{ steps.review-context.outputs.pr-number }}');

                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: issueNumber,
                  body: summary
                });
              }
            }

      - name: Upload review results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-review-results
          path: |
            review-summary.md
            review-details.json
          if-no-files-found: ignore
          retention-days: 30
